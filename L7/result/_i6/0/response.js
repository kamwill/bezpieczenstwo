var res = {'data':'HTTP/1.1 200 Partial Content\x0aDate: Mon, 26 Nov 2018 18:37:15 GMT\x0aServer: Apache/2.4.37 (Unix) OpenSSL/1.0.2p PHP/7.2.12 mod_perl/2.0.8-dev Perl/v5.16.3\x0aLast-Modified: Thu, 11 Sep 2014 12:49:48 GMT\x0aETag: \x2250fe-502c99a8a7300\x22\x0aAccept-Ranges: bytes\x0aContent-Length: 20734\x0aContent-Range: bytes 0-20733/20734\x0aKeep-Alive: timeout=5, max=68\x0aConnection: Keep-Alive\x0aContent-Type: application/x-javascript\x0a\x0a/*\x0d\x0a  -------------------------------------------------------------------------\x0d\x0a            JavaScript Form Validator (gen_validatorv31.js)\x0d\x0a              Version 3.1\x0d\x0a   Copyright (C) 2003-2008 JavaScript-Coder.com. All rights reserved.\x0d\x0a   You can freely use this script in your Web pages.\x0d\x0a   You may adapt this script for your own needs, provided these opening credit\x0d\x0a    lines are kept intact.\x0d\x0a      \x0d\x0a   The Form validation script is distributed free from JavaScript-Coder.com\x0d\x0a   For updates, please visit:\x0d\x0a   http://www.javascript-coder.com/html-form/javascript-form-validation.phtml\x0d\x0a   \x0d\x0a   Questions & comments please send to support@javascript-coder.com\x0d\x0a  -------------------------------------------------------------------------  \x0d\x0a*/\x0d\x0afunction Validator(frmname)\x0d\x0a{\x0d\x0a  this.formobj=document.forms[frmname];\x0d\x0a   if(!this.formobj)\x0d\x0a   {\x0d\x0a     alert(\x22Error: couldnot get Form object \x22+frmname);\x0d\x0a      return;\x0d\x0a   }\x0d\x0a   if(this.formobj.onsubmit)\x0d\x0a   {\x0d\x0a    this.formobj.old_onsubmit = this.formobj.onsubmit;\x0d\x0a    this.formobj.onsubmit=null;\x0d\x0a   }\x0d\x0a   else\x0d\x0a   {\x0d\x0a    this.formobj.old_onsubmit = null;\x0d\x0a   }\x0d\x0a   this.formobj._sfm_form_name=frmname;\x0d\x0a   this.formobj.onsubmit=form_submit_handler;\x0d\x0a   this.addValidation = add_validation;\x0d\x0a   this.setAddnlValidationFunction=set_addnl_vfunction;\x0d\x0a   this.clearAllValidations = clear_all_validations;\x0d\x0a    this.disable_validations = false;//new\x0d\x0a    document.error_disp_handler = new sfm_ErrorDisplayHandler();\x0d\x0a    this.EnableOnPageErrorDisplay=validator_enable_OPED;\x0d\x0a   this.EnableOnPageErrorDisplaySingleBox=validator_enable_OPED_SB;\x0d\x0a    this.show_errors_together=true;\x0d\x0a    this.EnableMsgsTogether=sfm_enable_show_msgs_together;\x0d\x0a}\x0d\x0afunction set_addnl_vfunction(functionname)\x0d\x0a{\x0d\x0a  this.formobj.addnlvalidation = functionname;\x0d\x0a}\x0d\x0afunction sfm_enable_show_msgs_together()\x0d\x0a{\x0d\x0a    this.show_errors_together=true;\x0d\x0a    this.formobj.show_errors_together=true;\x0d\x0a}\x0d\x0afunction clear_all_validations()\x0d\x0a{\x0d\x0a   for(var itr=0;itr \x3c this.formobj.elements.length;itr++)\x0d\x0a   {\x0d\x0a      this.formobj.elements[itr].validationset = null;\x0d\x0a   }\x0d\x0a}\x0d\x0afunction form_submit_handler()\x0d\x0a{\x0d\x0a   var bRet = true;\x0d\x0a    document.error_disp_handler.clear_msgs();\x0d\x0a   for(var itr=0;itr \x3c this.elements.length;itr++)\x0d\x0a   {\x0d\x0a      if(this.elements[itr].validationset &&\x0d\x0a      !this.elements[itr].validationset.validate())\x0d\x0a      {\x0d\x0a        bRet = false;\x0d\x0a      }\x0d\x0a        if(!bRet && !this.show_errors_together)\x0d\x0a        {\x0d\x0a          break;\x0d\x0a        }\x0d\x0a   }\x0d\x0a    if(!bRet)\x0d\x0a    {\x0d\x0a      document.error_disp_handler.FinalShowMsg();\x0d\x0a      return false;\x0d\x0a    }\x0d\x0a\x0d\x0a   if(this.addnlvalidation)\x0d\x0a   {\x0d\x0a     str =\x22 var ret = \x22+this.addnlvalidation+\x22()\x22;\x0d\x0a     eval(str);\x0d\x0a    if(!ret) return ret;\x0d\x0a   }\x0d\x0a   return true;\x0d\x0a}\x0d\x0afunction add_validation(itemname,descriptor,errstr)\x0d\x0a{\x0d\x0a   var condition = null;\x0d\x0a   if(arguments.length \x3e 3)\x0d\x0a   {\x0d\x0a    condition = arguments[3]; \x0d\x0a   }\x0d\x0a  if(!this.formobj)\x0d\x0a   {\x0d\x0a      alert(\x22Error: The form object is not set properly\x22);\x0d\x0a      return;\x0d\x0a   }//if\x0d\x0a   var itemobj = this.formobj[itemname];\x0d\x0a    if(itemobj.length && isNaN(itemobj.selectedIndex) )\x0d\x0a    //for radio button; don\x27t do for \x27select\x27 item\x0d\x0a   {\x0d\x0a      itemobj = itemobj[0];\x0d\x0a   }  \x0d\x0a  if(!itemobj)\x0d\x0a   {\x0d\x0a      alert(\x22Error: Couldnot get the input object named: \x22+itemname);\x0d\x0a      return;\x0d\x0a   }\x0d\x0a   if(!itemobj.validationset)\x0d\x0a   {\x0d\x0a      itemobj.validationset = new ValidationSet(itemobj,this.show_errors_together);\x0d\x0a   }\x0d\x0a   itemobj.validationset.add(descriptor,errstr,condition);\x0d\x0a    itemobj.validatorobj=this;\x0d\x0a}\x0d\x0afunction validator_enable_OPED()\x0d\x0a{\x0d\x0a    document.error_disp_handler.EnableOnPageDisplay(false);\x0d\x0a}\x0d\x0a\x0d\x0afunction validator_enable_OPED_SB()\x0d\x0a{\x0d\x0a   document.error_disp_handler.EnableOnPageDisplay(true);\x0d\x0a}\x0d\x0afunction sfm_ErrorDisplayHandler()\x0d\x0a{\x0d\x0a  this.msgdisplay = new AlertMsgDisplayer();\x0d\x0a  this.EnableOnPageDisplay= edh_EnableOnPageDisplay;\x0d\x0a  this.ShowMsg=edh_ShowMsg;\x0d\x0a  this.FinalShowMsg=edh_FinalShowMsg;\x0d\x0a  this.all_msgs=new Array();\x0d\x0a  this.clear_msgs=edh_clear_msgs;\x0d\x0a}\x0d\x0afunction edh_clear_msgs()\x0d\x0a{\x0d\x0a    this.msgdisplay.clearmsg(this.all_msgs);\x0d\x0a    this.all_msgs = new Array();\x0d\x0a}\x0d\x0afunction edh_FinalShowMsg()\x0d\x0a{\x0d\x0a    this.msgdisplay.showmsg(this.all_msgs);\x0d\x0a}\x0d\x0afunction edh_EnableOnPageDisplay(single_box)\x0d\x0a{\x0d\x0a   if(true == single_box)\x0d\x0a   {\x0d\x0a      this.msgdisplay = new SingleBoxErrorDisplay();\x0d\x0a   }\x0d\x0a   else\x0d\x0a   {\x0d\x0a      this.msgdisplay = new DivMsgDisplayer();     \x0d\x0a   }\x0d\x0a}\x0d\x0afunction edh_ShowMsg(msg,input_element)\x0d\x0a{\x0d\x0a   \x0d\x0a   var objmsg = new Array();\x0d\x0a   objmsg[\x22input_element\x22] = input_element;\x0d\x0a   objmsg[\x22msg\x22] =  msg;\x0d\x0a   this.all_msgs.push(objmsg);\x0d\x0a}\x0d\x0afunction AlertMsgDisplayer()\x0d\x0a{\x0d\x0a  this.showmsg = alert_showmsg;\x0d\x0a  this.clearmsg=alert_clearmsg;\x0d\x0a}\x0d\x0afunction alert_clearmsg(msgs)\x0d\x0a{\x0d\x0a\x0d\x0a}\x0d\x0afunction alert_showmsg(msgs)\x0d\x0a{\x0d\x0a    var whole_msg=\x22\x22;\x0d\x0a    var first_elmnt=null;\x0d\x0a    for(var m in msgs)\x0d\x0a    {\x0d\x0a        if(null == first_elmnt)\x0d\x0a        {\x0d\x0a            first_elmnt = msgs[m][\x22input_element\x22];\x0d\x0a        }\x0d\x0a        whole_msg += msgs[m][\x22msg\x22] + \x22\x5cn\x22;\x0d\x0a    }\x0d\x0a   \x0d\x0a    alert(whole_msg);\x0d\x0a\x0d\x0a    if(null != first_elmnt)\x0d\x0a    {\x0d\x0a        first_elmnt.focus();\x0d\x0a    }\x0d\x0a}\x0d\x0afunction sfm_show_error_msg(msg,input_elmt)\x0d\x0a{\x0d\x0a    document.error_disp_handler.ShowMsg(msg,input_elmt);\x0d\x0a}\x0d\x0afunction SingleBoxErrorDisplay()\x0d\x0a{\x0d\x0a this.showmsg=sb_div_showmsg;\x0d\x0a this.clearmsg=sb_div_clearmsg;\x0d\x0a}\x0d\x0a\x0d\x0afunction sb_div_clearmsg(msgs)\x0d\x0a{\x0d\x0a   var divname = form_error_div_name(msgs);\x0d\x0a   show_div_msg(divname,\x22\x22);\x0d\x0a}\x0d\x0a\x0d\x0afunction sb_div_showmsg(msgs)\x0d\x0a{\x0d\x0a   var whole_msg=\x22\x3cul\x3e\x5cn\x22;\x0d\x0a   for(var m in msgs)\x0d\x0a    {\x0d\x0a        whole_msg += \x22\x3cli\x3e\x22 + msgs[m][\x22msg\x22] + \x22\x3c/li\x3e\x5cn\x22;\x0d\x0a    }\x0d\x0a   whole_msg += \x22\x3c/ul\x3e\x22;\x0d\x0a   var divname = form_error_div_name(msgs);\x0d\x0a   show_div_msg(divname,whole_msg);\x0d\x0a}\x0d\x0afunction form_error_div_name(msgs)\x0d\x0a{\x0d\x0a   var input_element= null;\x0d\x0a\x0d\x0a   for(var m in msgs)\x0d\x0a   {\x0d\x0a    input_element = msgs[m][\x22input_element\x22];\x0d\x0a    if(input_element){break;}\x0d\x0a   }\x0d\x0a\x0d\x0a   var divname =\x22\x22;\x0d\x0a   if(input_element)\x0d\x0a   {\x0d\x0a    divname = input_element.form._sfm_form_name + \x22_errorloc\x22;\x0d\x0a   }\x0d\x0a\x0d\x0a   return divname;\x0d\x0a}\x0d\x0afunction DivMsgDisplayer()\x0d\x0a{\x0d\x0a this.showmsg=div_showmsg;\x0d\x0a this.clearmsg=div_clearmsg;\x0d\x0a}\x0d\x0afunction div_clearmsg(msgs)\x0d\x0a{\x0d\x0a    for(var m in msgs)\x0d\x0a    {\x0d\x0a        var divname = element_div_name(msgs[m][\x22input_element\x22]);\x0d\x0a        show_div_msg(divname,\x22\x22);\x0d\x0a    }\x0d\x0a}\x0d\x0afunction element_div_name(input_element)\x0d\x0a{\x0d\x0a  var divname = input_element.form._sfm_form_name + \x22_\x22 + \x0d\x0a                   input_element.name + \x22_errorloc\x22;\x0d\x0a\x0d\x0a  divname = divname.replace(/[\x5c[\x5c]]/gi,\x22\x22);\x0d\x0a\x0d\x0a  return divname;\x0d\x0a}\x0d\x0afunction div_showmsg(msgs)\x0d\x0a{\x0d\x0a    var whole_msg;\x0d\x0a    var first_elmnt=null;\x0d\x0a    for(var m in msgs)\x0d\x0a    {\x0d\x0a        if(null == first_elmnt)\x0d\x0a        {\x0d\x0a            first_elmnt = msgs[m][\x22input_element\x22];\x0d\x0a        }\x0d\x0a        var divname = element_div_name(msgs[m][\x22input_element\x22]);\x0d\x0a        show_div_msg(divname,msgs[m][\x22msg\x22]);\x0d\x0a    }\x0d\x0a    if(null != first_elmnt)\x0d\x0a    {\x0d\x0a        first_elmnt.focus();\x0d\x0a    }\x0d\x0a}\x0d\x0afunction show_div_msg(divname,msgstring)\x0d\x0a{\x0d\x0a   if(divname.length\x3c=0) return false;\x0d\x0a\x0d\x0a   if(document.layers)\x0d\x0a   {\x0d\x0a      divlayer = document.layers[divname];\x0d\x0a        if(!divlayer){return;}\x0d\x0a      divlayer.document.open();\x0d\x0a      divlayer.document.write(msgstring);\x0d\x0a      divlayer.document.close();\x0d\x0a   }\x0d\x0a   else\x0d\x0a   if(document.all)\x0d\x0a   {\x0d\x0a      divlayer = document.all[divname];\x0d\x0a        if(!divlayer){return;}\x0d\x0a      divlayer.innerHTML=msgstring;\x0d\x0a   }\x0d\x0a   else\x0d\x0a   if(document.getElementById)\x0d\x0a   {\x0d\x0a      divlayer = document.getElementById(divname);\x0d\x0a        if(!divlayer){return;}\x0d\x0a      divlayer.innerHTML =msgstring;\x0d\x0a   }\x0d\x0a   divlayer.style.visibility=\x22visible\x22;   \x0d\x0a   return false;\x0d\x0a}\x0d\x0afunction ValidationDesc(inputitem,desc,error,condition)\x0d\x0a{\x0d\x0a  this.desc=desc;\x0d\x0a   this.error=error;\x0d\x0a   this.itemobj = inputitem;\x0d\x0a   this.condition = condition;\x0d\x0a   this.validate=vdesc_validate;\x0d\x0a}\x0d\x0afunction vdesc_validate()\x0d\x0a{\x0d\x0a   if(this.condition != null )\x0d\x0a   {\x0d\x0a      if(!eval(this.condition))\x0d\x0a      {\x0d\x0a         return true;\x0d\x0a      }\x0d\x0a   }\x0d\x0a   if(!validateInput(this.desc,this.itemobj,this.error))\x0d\x0a   {\x0d\x0a      this.itemobj.validatorobj.disable_validations=true;\x0d\x0a      this.itemobj.focus();\x0d\x0a      return false;\x0d\x0a   }\x0d\x0a   return true;\x0d\x0a}\x0d\x0afunction ValidationSet(inputitem,msgs_together)\x0d\x0a{\x0d\x0a    this.vSet=new Array();\x0d\x0a   this.add= add_validationdesc;\x0d\x0a   this.validate= vset_validate;\x0d\x0a   this.itemobj = inputitem;\x0d\x0a    this.msgs_together = msgs_together;\x0d\x0a}\x0d\x0afunction add_validationdesc(desc,error,condition)\x0d\x0a{\x0d\x0a  this.vSet[this.vSet.length]= \x0d\x0a  new ValidationDesc(this.itemobj,desc,error,condition);\x0d\x0a}\x0d\x0afunction vset_validate()\x0d\x0a{\x0d\x0a    var bRet = true;\x0d\x0a    for(var itr=0;itr\x3cthis.vSet.length;itr++)\x0d\x0a    {\x0d\x0a        bRet = bRet && this.vSet[itr].validate();\x0d\x0a        if(!bRet && !this.msgs_together)\x0d\x0a        {\x0d\x0a            break;\x0d\x0a        }\x0d\x0a    }\x0d\x0a    return bRet;\x0d\x0a}\x0d\x0afunction validateEmail(email)\x0d\x0a{\x0d\x0a    var splitted = email.match(\x22^(.+)@(.+)$\x22);\x0d\x0a    if(splitted == null) return false;\x0d\x0a    if(splitted[1] != null )\x0d\x0a    {\x0d\x0a      var regexp_user=/^\x5c\x22?[\x5cw-_\x5c.]*\x5c\x22?$/;\x0d\x0a      if(splitted[1].match(regexp_user) == null) return false;\x0d\x0a    }\x0d\x0a    if(splitted[2] != null)\x0d\x0a    {\x0d\x0a      var regexp_domain=/^[\x5cw-\x5c.]*\x5c.[A-Za-z]{2,4}$/;\x0d\x0a      if(splitted[2].match(regexp_domain) == null) \x0d\x0a      {\x0d\x0a       var regexp_ip =/^\x5c[\x5cd{1,3}\x5c.\x5cd{1,3}\x5c.\x5cd{1,3}\x5c.\x5cd{1,3}\x5c]$/;\x0d\x0a       if(splitted[2].match(regexp_ip) == null) return false;\x0d\x0a      }// if\x0d\x0a      return true;\x0d\x0a    }\x0d\x0areturn false;\x0d\x0a}\x0d\x0a\x0d\x0afunction IsCheckSelected(objValue,chkValue)\x0d\x0a{\x0d\x0a    var selected=false;\x0d\x0a   var objcheck = objValue.form.elements[objValue.name];\x0d\x0a    if(objcheck.length)\x0d\x0a   {\x0d\x0a      var idxchk=-1;\x0d\x0a      for(var c=0;c \x3c objcheck.length;c++)\x0d\x0a      {\x0d\x0a         if(objcheck[c].value == chkValue)\x0d\x0a         {\x0d\x0a           idxchk=c;\x0d\x0a          break;\x0d\x0a         }//if\x0d\x0a      }//for\x0d\x0a      if(idxchk\x3e= 0)\x0d\x0a      {\x0d\x0a        if(objcheck[idxchk].checked==\x221\x22)\x0d\x0a        {\x0d\x0a          selected=true;\x0d\x0a        }\x0d\x0a      }//if\x0d\x0a   }\x0d\x0a   else\x0d\x0a   {\x0d\x0a      if(objValue.checked == \x221\x22)\x0d\x0a      {\x0d\x0a         selected=true;\x0d\x0a      }//if\x0d\x0a   }//else  \x0d\x0a\x0d\x0a   return selected;\x0d\x0a}\x0d\x0afunction TestDontSelectChk(objValue,chkValue,strError)\x0d\x0a{\x0d\x0a   var pass = true;\x0d\x0a   pass = IsCheckSelected(objValue,chkValue)?false:true;\x0d\x0a\x0d\x0a   if(pass==false)\x0d\x0a   {\x0d\x0a     if(!strError || strError.length ==0) \x0d\x0a        { \x0d\x0a         strError = \x22Can\x27t Proceed as you selected \x22+objValue.name;  \x0d\x0a        }//if          \x0d\x0a     sfm_show_error_msg(strError,objValue);\x0d\x0a     \x0d\x0a   }\x0d\x0a    return pass;\x0d\x0a}\x0d\x0afunction TestShouldSelectChk(objValue,chkValue,strError)\x0d\x0a{\x0d\x0a   var pass = true;\x0d\x0a\x0d\x0a   pass = IsCheckSelected(objValue,chkValue)?true:false;\x0d\x0a\x0d\x0a   if(pass==false)\x0d\x0a   {\x0d\x0a     if(!strError || strError.length ==0) \x0d\x0a        { \x0d\x0a         strError = \x22You should select\x22+objValue.name;  \x0d\x0a        }//if          \x0d\x0a     sfm_show_error_msg(strError,objValue);\x0d\x0a     \x0d\x0a   }\x0d\x0a    return pass;\x0d\x0a}\x0d\x0afunction TestRequiredInput(objValue,strError)\x0d\x0a{\x0d\x0a var ret = true;\x0d\x0a    if(eval(objValue.value.length) == 0) \x0d\x0a    { \x0d\x0a       if(!strError || strError.length ==0) \x0d\x0a       { \x0d\x0a         strError = objValue.name + \x22 : Required Field\x22; \x0d\x0a       }//if \x0d\x0a       sfm_show_error_msg(strError,objValue); \x0d\x0a       ret=false; \x0d\x0a    }//if \x0d\x0areturn ret;\x0d\x0a}\x0d\x0afunction TestMaxLen(objValue,strMaxLen,strError)\x0d\x0a{\x0d\x0a var ret = true;\x0d\x0a    if(eval(objValue.value.length) \x3e eval(strMaxLen)) \x0d\x0a    { \x0d\x0a      if(!strError || strError.length ==0) \x0d\x0a      { \x0d\x0a        strError = objValue.name + \x22 : \x22+ strMaxLen +\x22 characters maximum \x22; \x0d\x0a      }//if \x0d\x0a      sfm_show_error_msg(strError,objValue); \x0d\x0a      ret = false; \x0d\x0a    }//if \x0d\x0areturn ret;\x0d\x0a}\x0d\x0afunction TestMinLen(objValue,strMinLen,strError)\x0d\x0a{\x0d\x0a var ret = true;\x0d\x0a    if(eval(objValue.value.length) \x3c  eval(strMinLen)) \x0d\x0a    { \x0d\x0a      if(!strError || strError.length ==0) \x0d\x0a      { \x0d\x0a        strError = objValue.name + \x22 : \x22 + strMinLen + \x22 characters minimum  \x22; \x0d\x0a      }//if               \x0d\x0a      sfm_show_error_msg(strError,objValue); \x0d\x0a      ret = false;   \x0d\x0a    }//if \x0d\x0areturn ret;\x0d\x0a}\x0d\x0afunction TestInputType(objValue,strRegExp,strError,strDefaultError)\x0d\x0a{\x0d\x0a   var ret = true;\x0d\x0a\x0d\x0a    var charpos = objValue.value.search(strRegExp); \x0d\x0a    if(objValue.value.length \x3e 0 &&  charpos \x3e= 0) \x0d\x0a    { \x0d\x0a     if(!strError || strError.length ==0) \x0d\x0a      { \x0d\x0a        strError = strDefaultError;\x0d\x0a      }//if \x0d\x0a      sfm_show_error_msg(strError,objValue); \x0d\x0a      ret = false; \x0d\x0a    }//if \x0d\x0a return ret;\x0d\x0a}\x0d\x0afunction TestEmail(objValue,strError)\x0d\x0a{\x0d\x0avar ret = true;\x0d\x0a     if(objValue.value.length \x3e 0 && !validateEmail(objValue.value)   ) \x0d\x0a     { \x0d\x0a       if(!strError || strError.length ==0) \x0d\x0a       { \x0d\x0a          strError = objValue.name+\x22: Enter a valid Email address \x22; \x0d\x0a       }//if                                               \x0d\x0a       sfm_show_error_msg(strError,objValue); \x0d\x0a       ret = false; \x0d\x0a     }//if \x0d\x0areturn ret;\x0d\x0a}\x0d\x0afunction TestLessThan(objValue,strLessThan,strError)\x0d\x0a{\x0d\x0avar ret = true;\x0d\x0a     if(isNaN(objValue.value)) \x0d\x0a     { \x0d\x0a       sfm_show_error_msg(objValue.name +\x22: Should be a number \x22,objValue); \x0d\x0a       ret = false; \x0d\x0a     }//if \x0d\x0a     else\x0d\x0a     if(eval(objValue.value) \x3e=  eval(strLessThan)) \x0d\x0a     { \x0d\x0a       if(!strError || strError.length ==0) \x0d\x0a       { \x0d\x0a         strError = objValue.name + \x22 : value should be less than \x22+ strLessThan; \x0d\x0a       }//if               \x0d\x0a       sfm_show_error_msg(strError,objValue); \x0d\x0a       ret = false;                 \x0d\x0a      }//if   \x0d\x0areturn ret;          \x0d\x0a}\x0d\x0afunction TestGreaterThan(objValue,strGreaterThan,strError)\x0d\x0a{\x0d\x0avar ret = true;\x0d\x0a     if(isNaN(objValue.value)) \x0d\x0a     { \x0d\x0a       sfm_show_error_msg(objValue.name+\x22: Should be a number \x22,objValue); \x0d\x0a       ret = false; \x0d\x0a     }//if \x0d\x0a    else\x0d\x0a     if(eval(objValue.value) \x3c=  eval(strGreaterThan)) \x0d\x0a      { \x0d\x0a        if(!strError || strError.length ==0) \x0d\x0a        { \x0d\x0a          strError = objValue.name + \x22 : value should be greater than \x22+ strGreaterThan; \x0d\x0a        }//if               \x0d\x0a        sfm_show_error_msg(strError,objValue);  \x0d\x0a        ret = false;\x0d\x0a      }//if  \x0d\x0areturn ret;           \x0d\x0a}\x0d\x0afunction TestRegExp(objValue,strRegExp,strError)\x0d\x0a{\x0d\x0avar ret = true;\x0d\x0a    if( objValue.value.length \x3e 0 && \x0d\x0a        !objValue.value.match(strRegExp) ) \x0d\x0a    { \x0d\x0a      if(!strError || strError.length ==0) \x0d\x0a      { \x0d\x0a        strError = objValue.name+\x22: Invalid characters found \x22; \x0d\x0a      }//if                                                               \x0d\x0a      sfm_show_error_msg(strError,objValue); \x0d\x0a      ret = false;                   \x0d\x0a    }//if \x0d\x0areturn ret;\x0d\x0a}\x0d\x0afunction TestDontSelect(objValue,dont_sel_value,strError)\x0d\x0a{\x0d\x0avar ret = true;\x0d\x0a     if(objValue.value == null) \x0d\x0a     { \x0d\x0a       sfm_show_error_msg(\x22Error: dontselect command for non-select Item\x22,objValue); \x0d\x0a       ret = false; \x0d\x0a     } \x0d\x0a    else\x0d\x0a     if(objValue.value == dont_sel_value) \x0d\x0a     { \x0d\x0a      if(!strError || strError.length ==0) \x0d\x0a       { \x0d\x0a        strError = objValue.name+\x22: Please Select one option \x22; \x0d\x0a       }//if                                                               \x0d\x0a       sfm_show_error_msg(strError,objValue); \x0d\x0a       ret =  false;                                   \x0d\x0a      } \x0d\x0areturn ret;\x0d\x0a}\x0d\x0afunction TestSelectOneRadio(objValue,strError)\x0d\x0a{\x0d\x0a   var objradio = objValue.form.elements[objValue.name];\x0d\x0a   var one_selected=false;\x0d\x0a   for(var r=0;r \x3c objradio.length;r++)\x0d\x0a   {\x0d\x0a     if(objradio[r].checked == \x221\x22)\x0d\x0a     {\x0d\x0a      one_selected=true;\x0d\x0a      break;\x0d\x0a     }\x0d\x0a   }\x0d\x0a   if(false == one_selected)\x0d\x0a   {\x0d\x0a      if(!strError || strError.length ==0) \x0d\x0a       {\x0d\x0a       strError = \x22Please select one option from \x22+objValue.name;\x0d\x0a      }  \x0d\x0a     sfm_show_error_msg(strError,objValue);\x0d\x0a   }\x0d\x0areturn one_selected;\x0d\x0a}\x0d\x0a\x0d\x0afunction TestFileExtension(objValue,cmdvalue,strError)\x0d\x0a{\x0d\x0a    var ret=false;\x0d\x0a    var found=false;\x0d\x0a\x0d\x0a    if(objValue.value.length \x3c= 0)\x0d\x0a    {//The \x27required\x27 validation is not done here\x0d\x0a        return true;\x0d\x0a    }\x0d\x0a   \x0d\x0a    var extns = cmdvalue.split(\x22;\x22);\x0d\x0a    for(var i=0;i \x3c extns.length;i++)\x0d\x0a    {\x0d\x0a        ext = objValue.value.substr(objValue.value.length - extns[i].length,extns[i].length);\x0d\x0a        ext = ext.toLowerCase();\x0d\x0a        if(ext == extns[i])\x0d\x0a        {\x0d\x0a            found=true;break;\x0d\x0a        }\x0d\x0a    }\x0d\x0a    if(!found)\x0d\x0a    {\x0d\x0a       if(!strError || strError.length ==0) \x0d\x0a       { \x0d\x0a         strError = objValue.name + \x22 allowed file extensions are: \x22+cmdvalue; \x0d\x0a       }//if \x0d\x0a       sfm_show_error_msg(strError,objValue); \x0d\x0a       ret=false;        \x0d\x0a    }\x0d\x0a    else\x0d\x0a    {\x0d\x0a        ret=true;\x0d\x0a    }\x0d\x0a    return ret;\x0d\x0a}\x0d\x0a\x0d\x0a\x0d\x0afunction validateInput(strValidateStr,objValue,strError) \x0d\x0a{ \x0d\x0a    var ret = true;\x0d\x0a    var epos = strValidateStr.search(\x22=\x22); \x0d\x0a    var  command  = \x22\x22; \x0d\x0a    var  cmdvalue = \x22\x22; \x0d\x0a    if(epos \x3e= 0) \x0d\x0a    { \x0d\x0a     command  = strValidateStr.substring(0,epos); \x0d\x0a     cmdvalue = strValidateStr.substr(epos+1); \x0d\x0a    } \x0d\x0a    else \x0d\x0a    { \x0d\x0a     command = strValidateStr; \x0d\x0a    } \x0d\x0a    switch(command) \x0d\x0a    { \x0d\x0a        case \x22req\x22: \x0d\x0a        case \x22required\x22: \x0d\x0a         { \x0d\x0a         ret = TestRequiredInput(objValue,strError)\x0d\x0a           break;             \x0d\x0a         }//case required \x0d\x0a        case \x22maxlength\x22: \x0d\x0a        case \x22maxlen\x22: \x0d\x0a          { \x0d\x0a          ret = TestMaxLen(objValue,cmdvalue,strError)\x0d\x0a             break; \x0d\x0a          }//case maxlen \x0d\x0a        case \x22minlength\x22: \x0d\x0a        case \x22minlen\x22: \x0d\x0a           { \x0d\x0a          ret = TestMinLen(objValue,cmdvalue,strError)\x0d\x0a             break; \x0d\x0a            }//case minlen \x0d\x0a        case \x22alnum\x22: \x0d\x0a        case \x22alphanumeric\x22: \x0d\x0a           { \x0d\x0a            ret = TestInputType(objValue,\x22[^A-Za-z0-9]\x22,strError, \x0d\x0a                  objValue.name+\x22: Only alpha-numeric characters allowed \x22);\x0d\x0a            break; \x0d\x0a           }\x0d\x0a        case \x22alnum_s\x22: \x0d\x0a        case \x22alphanumeric_space\x22: \x0d\x0a           { \x0d\x0a            ret = TestInputType(objValue,\x22[^A-Za-z0-9\x5c\x5cs]\x22,strError, \x0d\x0a                  objValue.name+\x22: Only alpha-numeric characters and space allowed \x22);\x0d\x0a            break; \x0d\x0a           }         \x0d\x0a        case \x22num\x22: \x0d\x0a        case \x22numeric\x22: \x0d\x0a           { \x0d\x0a                ret = TestInputType(objValue,\x22[^0-9]\x22,strError, \x0d\x0a                  objValue.name+\x22: Only digits allowed \x22);\x0d\x0a                break;               \x0d\x0a           }\x0d\x0a        case \x22alphabetic\x22: \x0d\x0a        case \x22alpha\x22: \x0d\x0a           { \x0d\x0a                ret = TestInputType(objValue,\x22[^A-Za-z]\x22,strError, \x0d\x0a                  objValue.name+\x22: Only alphabetic characters allowed \x22);\x0d\x0a                break; \x0d\x0a           }\x0d\x0a        case \x22alphabetic_space\x22: \x0d\x0a        case \x22alpha_s\x22: \x0d\x0a           { \x0d\x0a                ret = TestInputType(objValue,\x22[^A-Za-z\x5c\x5cs]\x22,strError, \x0d\x0a                  objValue.name+\x22: Only alphabetic characters and space allowed \x22);\x0d\x0a                break; \x0d\x0a           }\x0d\x0a        case \x22email\x22: \x0d\x0a          { \x0d\x0a            ret = TestEmail(objValue,strError);\x0d\x0a               break; \x0d\x0a          }\x0d\x0a        case \x22lt\x22: \x0d\x0a        case \x22lessthan\x22: \x0d\x0a         { \x0d\x0a            ret = TestLessThan(objValue,cmdvalue,strError);\x0d\x0a              break; \x0d\x0a         }\x0d\x0a        case \x22gt\x22: \x0d\x0a        case \x22greaterthan\x22: \x0d\x0a         { \x0d\x0a         ret = TestGreaterThan(objValue,cmdvalue,strError);\x0d\x0a            break; \x0d\x0a         }//case greaterthan \x0d\x0a        case \x22regexp\x22: \x0d\x0a         { \x0d\x0a         ret = TestRegExp(objValue,cmdvalue,strError);\x0d\x0a           break; \x0d\x0a         }\x0d\x0a        case \x22dontselect\x22: \x0d\x0a         { \x0d\x0a          ret = TestDontSelect(objValue,cmdvalue,strError)\x0d\x0a             break; \x0d\x0a         }\x0d\x0a      case \x22dontselectchk\x22:\x0d\x0a      {\x0d\x0a         ret = TestDontSelectChk(objValue,cmdvalue,strError)\x0d\x0a         break;\x0d\x0a      }\x0d\x0a      case \x22shouldselchk\x22:\x0d\x0a      {\x0d\x0a         ret = TestShouldSelectChk(objValue,cmdvalue,strError)\x0d\x0a         break;\x0d\x0a      }\x0d\x0a      case \x22selone_radio\x22:\x0d\x0a      {\x0d\x0a         ret = TestSelectOneRadio(objValue,strError);\x0d\x0a          break;\x0d\x0a      }\x0d\x0a      case \x22file_extn\x22:\x0d\x0a      {\x0d\x0a         ret = TestFileExtension(objValue,cmdvalue,strError);\x0d\x0a         break;\x0d\x0a      }      \x0d\x0a    }//switch \x0d\x0a   return ret;\x0d\x0a}\x0d\x0afunction VWZ_IsListItemSelected(listname,value)\x0d\x0a{\x0d\x0a for(var i=0;i \x3c listname.options.length;i++)\x0d\x0a {\x0d\x0a  if(listname.options[i].selected == true &&\x0d\x0a   listname.options[i].value == value) \x0d\x0a   {\x0d\x0a     return true;\x0d\x0a   }\x0d\x0a }\x0d\x0a return false;\x0d\x0a}\x0d\x0afunction VWZ_IsChecked(objcheck,value)\x0d\x0a{\x0d\x0a if(objcheck.length)\x0d\x0a {\x0d\x0a     for(var c=0;c \x3c objcheck.length;c++)\x0d\x0a     {\x0d\x0a       if(objcheck[c].checked == \x221\x22 && \x0d\x0a        objcheck[c].value == value)\x0d\x0a       {\x0d\x0a        return true; \x0d\x0a       }\x0d\x0a     }\x0d\x0a }\x0d\x0a else\x0d\x0a {\x0d\x0a  if(objcheck.checked == \x221\x22 )\x0d\x0a   {\x0d\x0a    return true; \x0d\x0a   }    \x0d\x0a }\x0d\x0a return false;\x0d\x0a}\x0d\x0a/*\x0d\x0a   Copyright (C) 2003-2008 JavaScript-Coder.com . All rights reserved.\x0d\x0a*/'}